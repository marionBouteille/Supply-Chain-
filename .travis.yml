
language: node_js

before_install:
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  
env:
 - IMAGE_NAME=432782038415.dkr.ecr.eu-west-1.amazonaws.com/test:1.0-$TRAVIS_BUILD_NUMBER
 
services:
  - docker

script:
  - npm install

after_success:
  - pip install --user awscli 
  - eval $(aws ecr get-login --region eu-west-1 --no-include-email)
  - docker build -t test .
  - docker tag test $IMAGE_NAME
  - docker push $IMAGE_NAME
  #- aws cloudformation deploy --template-file ./ecs-task.yaml --stack-name exo4ISEN3 --region eu-west-1 --parameter-override ImageName=$IMAGE_NAME
  #- aws cloudformation update-stack --template-body file://./ecs-task.yaml --stack-name exo4ISEN3 --region eu-west-1 --parameters "ParameterKey=ImageName,ParameterValue=$IMAGE_NAME"
  - mkdir $HOME/.kube
  - cp config $HOME/.kube/config
  #- kubectl config set clusters.default.certificate-authority-data "$KUBE_CLUSTER_CERTIFICATE" 
  - kubectl config set clusters.default.server "$KUBE_CLUSTER_SERVER" 
  - kubectl config set users.default.username "$KUBE_CLIENT_USERNAME"
  - kubectl config set users.default.password "$KUBE_CLIENT_PASSWORD"
  - kubectl set image deployment node-deployment1 node-deployment1=432782038415.dkr.ecr.eu-west-1.amazonaws.com/test:1.0-17
 
  
  
  
  

  